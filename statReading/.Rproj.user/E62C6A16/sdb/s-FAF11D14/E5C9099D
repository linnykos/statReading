{
    "collab_server" : "",
    "contents" : "create_prob_grid <- function(xlim, ylim, density_func, grid_size = 200){\n  xseq <- seq(xlim[1], xlim[2], length.out = grid_size)\n  yseq <- seq(ylim[1], ylim[2], length.out = grid_size)\n\n  mat <- sapply(yseq, function(y){ sapply(xseq, function(x){density_func(x,y)})})\n  rownames(mat) <- yseq; colnames(mat) <- xseq\n  mat\n}\n\nplot_grid <- function(mat, type = c(\"contour\"), alpha = 0.5, nlevels = 10, ...){\n  xseq <- as.numeric(colnames(mat)); yseq <- as.numeric(rownames(mat))\n\n  image(xseq, yseq, mat, col = grDevices::heat.colors(100, alpha = alpha), ...)\n  contour(xseq, yseq, mat, nlevels = nlevels, add = T, ...)\n}\n\nsample_from_grid <- function(mat, n = 50){\n  xseq <- as.numeric(colnames(mat)); yseq <- as.numeric(rownames(mat))\n  h <- nrow(mat); w <- ncol(mat)\n  vec <- as.numeric(mat); len <- length(vec)\n  idx <- sample(1:len, n, prob = vec, replace = T)\n\n  dat <- sapply(idx, function(i){\n    x <- ifelse(i %% h == 0, h, i %% h)\n    y <- floor(i/h)\n    c(xseq[x],yseq[y])\n  })\n\n  t(dat)\n}\n\n#no intercept\nols <- function(dat){\n  x <- dat[,1]; y <- dat[,2]\n\n  (t(x)%*%x)^(-1)*t(x)%*%y\n}\n\nplot_ols <- function(res, xlim, ...){\n  y1 <- res*xlim[1]; y2 <- res*xlim[2]\n  graphics::lines(xlim, c(y1, y2), ...)\n}\n",
    "created" : 1505328606835.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4164957795",
    "id" : "E5C9099D",
    "lastKnownWriteTime" : 1505330604,
    "last_content_update" : 1505330604155,
    "path" : "~/Dropbox/random/statReading/statReading/R/regression.R",
    "project_path" : "R/regression.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}